1.  Sessions:

    create table sessions(
        session_id varchar(36),
        roll_no varchar(10),
        expires_at timestamp
    );


2. Users : 

   CREATE TABLE users (
        user_id SERIAL PRIMARY KEY,
        user_name VARCHAR(50) UNIQUE,
        mobile_no VARCHAR(10),
        location VARCHAR(40),
        password TEXT,
        email VARCHAR(150) UNIQUE
    );


3. chatlist : 

    CREATE TABLE chatlist (
        sender_id INT REFERENCES users(user_id) ,
        receiver_id INT REFERENCES users(user_id) ,
        last_msg TEXT DEFAULT 'No Messages yet',
        created_at TIMESTAMP ,
        is_group boolean,
        group_id int,
        lst_msg_id int,
        deleted_msg_id int,
        foreign key(user_id) references users(user_id),
        PRIMARY KEY (sender_id, receiver_id),
        foreign key(group_id) references allgroups(group_id)
    );

4. messages : 

    create table messages (
        msg_id serial primary key,
        sender_id int references users(user_id),
        receiver_id int references users(user_id),
        msg_type text,
        msg_content text,created_at timestamp
    );


5. allgroups :

    create table allgroups (
        group_id serial primary key,
        group_name varchar(100),
        created_at timestamp default current_timestamp,
        admin jsonb
    );
 
 
6. groupmembers :

    create table groupmembers (
        group_id serial,
        user_id int,
        admin jsonb,
        foreign key(user_id) references users(user_id),
        primary key(group_id,user_id)
    );










            // new architecture

7.  CREATE TABLE IF NOT EXISTS cs_students (
        roll_no       VARCHAR(10) PRIMARY KEY,
        register_no   TEXT UNIQUE,
        name          TEXT,
        dob           DATE,
        email         TEXT UNIQUE,
        password      TEXT,
        batch_year    INT,
        passing_year  INT,
        branch        TEXT,
        current_year  INT,
        section       VARCHAR(1),
        chairperson   TEXT,
        mentor        TEXT
        CONSTRAINT cs_students_roll_email_unique UNIQUE (roll_no, email)
    );


8. CREATE TABLE IF NOT EXISTS cs_all_groups (
        group_id    SERIAL PRIMARY KEY,
        name        TEXT,
        admin       JSONB NOT NULL DEFAULT '[]'::jsonb,
        created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );


9.  CREATE TABLE IF NOT EXISTS cs_group_members (
        group_id    INT NOT NULL,
        member_id   TEXT NOT NULL,
        group_name  TEXT,
        isadmin     BOOLEAN,
        PRIMARY KEY (group_id, member_id)
        FOREIGN KEY REFERENCES cse_all_groups(group_id)
    );



10. CREATE TABLE all_messages (
        msg_id BIGSERIAL ,
        sender_id VARCHAR(10),
        receiver_id VARCHAR(10),
        type TEXT,
        content TEXT,
        meta_data JSONB,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        status TEXT default 'sent' 
    ) PARTITION BY RANGE (created_at);


CREATE TABLE messages_2025_08
    PARTITION OF messages
    FOR VALUES FROM ('2025-08-01') TO ('2025-09-01');

-- Add PK to this partition only
ALTER TABLE messages_2025_08
    ADD CONSTRAINT messages_2025_08_pkey PRIMARY KEY (msg_id);

-- Add index for sender/receiver lookups in this partition
CREATE INDEX idx_sender_receiver_2025_08
    ON messages_2025_08 (sender_id, receiver_id);


insert into cs_students(roll_no,register_no,name,dob,email,batch_year,passing_year,branch,current_year,section,chairperson,mentor) values('23ucs113','920423104082','MAREESWARI.R','2005-11-10','23ucs113@kamarajengg.edu.in',2023,2027,'BE',3,'A','D.ASIR','MUTHU KRISHNAN');




talklet=# select * from cs_students;

 roll_no  |  register_no  |       name       |    dob     |            email            |                           password                           | batch_year | passing_year | branch | current_year | section | chairperson |     mentor      
----------+---------------+------------------+------------+-----------------------------+--------------------------------------------------------------+------------+--------------+--------+--------------+---------+-------------+-----------------
 23ucs122 | 920423104112  | RAMALINGAM G     | 2005-10-03 | 23ucs122@kamarajengg.edu.in | $2a$14$/XKJ/z8Vm6wuWtoqPdIdOeZeblH7kxGJt7hk96YlRFbHtnwd7HIoG |       2023 |         2027 | BE     |            3 | A       | D.ASIR      | KUMARAVEL
 23ucs099 | 9204231040128 | SANJAI VINAYAGAM | 2005-10-03 | 23ucs099@kamarajengg.edu.in | $2a$14$vJ6Xg.qVvnwHwHFPled9AO6VJGqOu3et.5YVNtMIA/4HtzTcsFK4. |       2023 |         2027 | BE     |            3 | A       | D.ASIR      | PRAVEEN KUMAR G
 23ucs145 | 920423104133  | S.Santhosh Kumar | 2006-01-15 | 23ucs145@kamarajengg.edu.in | $2a$14$8.qWwC5UqiZ837XvZGWqgucbpChSRxGYYKF3Rl0EMZJlyI5gUhDWq |       2023 |         2027 | BE     |            3 | A       | D.ASIR      | S.JANANI
